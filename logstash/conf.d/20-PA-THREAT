## This is a parser for Palo Alto URL / Threat and Data logs, for PanOS v8.x and Logstash v5.x

input {
  syslog {
    host => "0.0.0.0"
    port => 1515
    type => "pa-threat-log"
    tags => ["threat","paloalto", "SRC-1515"]
  }
}

filter {
    if [type] == "pa-threat-log" {

            grok {
                match => [ "message", "(\d\d\d\d/\d\d\/\d\d) (\d\d:\d\d\:\d\d),%{GREEDYDATA:raw_message}" ]
            }
    
    
        csv {
            source => "raw_message"
            columns => ["SerialNum", "LogEventType", "LogEventSubType", "ConfigVersion", "GenerateTime", "SourceAddress", "DestinationAddress", "NATSourceIP", "NATDestinationIP", "Rule", "SourceUser", "DestinationUser", "Application", "VirtualSystem", "SourceZone", "DestinationZone", "InboundInterface", "OutboundInterface", "LogAction", "TimeLogged", "SessionID", "RepeatCount", "SourcePort", "DestinationPort", "NATSourcePort", "NATDestinationPort", "Flags", "IPProtocol", "Action","URL","ThreatContentName","Category","Severity", "Direction", "SeqNo", "ActionFlags", "SourceCountry", "DestinationCountry", "CPadding", "ContentType", "pcap_id", "FileDigest", "Cloud”", "URL_idx", "User_Agent", "FileType", "X-Forward-For", "Referer", "Sender", "Subject", "Recipient", "ReportId", "dgh1", "dgh2", "dgh3", "dgh4", "VSYS_Name", "Device_Name", "Source_VM_UUID", "Destination_VM_UUID", "not_used_1", "HTTP_Method", "IMSI", "IMEI", "ParentSessionID", "ParentStartTime", "TunnelType", "Threat_Category", "ContentVersion", "not_used_2"]
        }
    
#        mutate {
#            remove_field => [ "message", "raw_message"]
#        } 


            
        #Geolocate logs that have SourceAddress and if that SourceAddress is a non-RFC1918 address
        if [SourceAddress] and [SourceAddress] !~ "(^127\.0\.0\.1)|(^10\.)|(^172\.1[6-9]\.)|(^172\.2[0-9]\.)|(^172\.3[0-1]\.)|(^192\.168\.)|(^169\.254\.)" {
            geoip {
                source => "SourceAddress"
                target => "SourceGeo"
            }
            #Delete 0,0 in SourceGeo.location if equal to 0,0
            if ([SourceGeo.location] and [SourceGeo.location] =~ "0,0") {
                mutate {
                replace => [ "SourceGeo.location", "" ]
                }
            }
            }    
            
        if [DestinationAddress] and [DestinationAddress] !~ "(^127\.0\.0\.1)|(^10\.)|(^172\.1[6-9]\.)|(^172\.2[0-9]\.)|(^172\.3[0-1]\.)|(^192\.168\.)|(^169\.254\.)" {
            geoip {
                source => "DestinationAddress"
                target => "DestinationGeo"
            }
            #Delete 0,0 in DestinationGeo.location if equal to 0,0
            if ([DestinationGeo.location] and [DestinationGeo.location] =~ "0,0") {
                mutate {
                replace => [ "DestinationAddress.location", "" ]
                }
            }
        }
    } ## END IF pa-threat-log

}

